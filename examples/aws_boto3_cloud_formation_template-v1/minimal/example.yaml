---
kind: ShellScript
version: v1
metadata:
  name: create-directory
  skipApplyAll: true
  skipDeleteAll: true
spec:
  shellInterpreter: bash
  source:
    type: inLine
    value: mkdir /tmp/cloudformation_templates
---
kind: WriteFile
version: v1
metadata:
  name: my-credentials-sm-cfn-template
  executeOnlyOnceOnApply: true
  dependencies:
    apply:
    - create-directory
  skipApplyAll: true
  skipDeleteAll: true
spec:
  targetFile: /tmp/cloudformation_templates/cfn-example.yaml
  data: |
    AWSTemplateFormatVersion: "2010-09-09"
    Description: 'An example S3 bucket template'
    Parameters:
      UsernameParameter:
        Type: String
    Resources:
      MyCredentials:
        Type: 'AWS::SecretsManager::Secret'
        Properties:
          Name: MyCredentialsForXyz
          Description: "An example secret"
          GenerateSecretString:
            SecretStringTemplate: !Sub
            - '{"username": "${Username}"}'
            - Username: !Ref UsernameParameter
            GenerateStringKey: "password"
            PasswordLength: 40
    Outputs:
      MyCredentialsArn:
        Description: 'ARN for MyCredentials'
        Value: !Ref MyCredentials
        Export:
          Name: !Join [ ":", [ !Ref "AWS::StackName", "MyCredentialsArn" ] ]
      MyCredentialsId:
        Description: 'ID for MyCredentials'
        Value: !GetAtt MyCredentials.Id
        Export:
          Name: !Join [ ":", [ !Ref "AWS::StackName", "MyCredentialsId" ] ]
---
kind: ShellScript
version: v1
metadata:
  name: random-username
  skipApplyAll: true
  skipDeleteAll: true
spec:
  shellInterpreter: bash
  source:
    type: inLine
    value: |
      chars=abcdefghijklmnopqrstuvwxyz1234567890
      for i in {1..16} ; do
      echo -n "${chars:RANDOM%${#chars}:1}"
      done
      echo
  convertOutputToText: true
  stripNewline: true
  convertRepeatingSpaces: true
  stripLeadingTrailingSpaces: true
---
kind: AwsBoto3Session
version: v1
metadata:
  name: aws-boto3-session
  skipApplyAll: true
  skipDeleteAll: true
spec:
  awsRegion: eu-central-1
  profileName: my-profile
---
kind: AwsBoto3Session
version: v1
metadata:
  name: aws-boto3-session-global
  skipApplyAll: true
  skipDeleteAll: true
spec:
  awsRegion: us-east-1
  profileName: my-profile
---
kind: AwsBoto3S3Bucket
version: v1
metadata:
  name: animus-artifacts-for-cloudformation
  dependencies:
    apply:
    - aws-boto3-session-global
    delete:
    - aws-boto3-session-global
  executeOnlyOnceOnApply: true
spec:
  awsBoto3Session:  aws-boto3-session-global
  name: animus-artifacts-for-cloudformation
---
kind: AwsBoto3S3Files
version: v1
metadata:
  name: cfn-upload-to-s3
  dependencies:
    apply:
    - animus-artifacts-for-cloudformation
    - my-credentials-sm-cfn-template
    delete:
    - animus-artifacts-for-cloudformation
  skipApplyAll: true
  skipDeleteAll: true
spec:
  awsBoto3Session: aws-boto3-session-global
  s3Bucket: '{{ .Variables.AwsBoto3S3Bucket:animus-artifacts-for-cloudformation:default:NAME }}'
  globalOverwrite: true
  destinationDirectory: default
  transferLogFile: /tmp/log/file_transfer.log
  sources:
  - sourceType: localFiles
    baseDirectory: /tmp/cloudformation_templates
    files:
    - cfn-example.yaml
  ifFileExists:
    overWrite: true
  onError: warn
  actionExtraFilesOnS3: keep
---
kind: AwsBoto3CloudFormationTemplateParameters
version: v1
metadata:
  name: aws-my-credentials-sm-cfn-template-deployment-parameters
  executeOnlyOnceOnApply: true
  skipApplyAll: true
  skipDeleteAll: true
  apply:
    - random-username
spec:
  parameters:
  - parameterName: 'UsernameParameter'
    parameterValue: '{{ .Variables.ShellScript:random-username:default:STDOUT }}'
---
kind: AwsBoto3CloudFormationTemplateTags
version: v1
metadata:
  name: aws-my-credentials-sm-cfn-template-deployment-tags
  executeOnlyOnceOnApply: true
  skipApplyAll: true
  skipDeleteAll: true
spec:
  tags:
  - tagName: 'Comment'
    tagValue: 'Demonstrating Animus Deployment'
---
kind: AwsBoto3CloudFormationTemplate
version: v1
metadata:
  name: aws-my-credentials-sm-cfn-template-deployment
  dependencies:
    apply:
    - random-username
    - aws-boto3-session
    - aws-my-credentials-sm-cfn-template-deployment-parameters
    - aws-my-credentials-sm-cfn-template-deployment-tags
    - cfn-upload-to-s3
    delete:
    - aws-boto3-session
  executeOnlyOnceOnApply: true
spec:
  awsBoto3SessionReference: aws-boto3-session
  templatePath: 'https://s3.amazonaws.com/{{ .Variables.AwsBoto3S3Bucket:animus-artifacts-for-cloudformation:default:NAME }}/default/cfn-example.yaml'
  parameterReferences:
  - aws-my-credentials-sm-cfn-template-deployment-parameters
  tagReferences:
  - aws-my-credentials-sm-cfn-template-deployment-tags