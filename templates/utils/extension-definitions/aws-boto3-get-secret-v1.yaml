---
kind: AnimusExtensionTemplate
version: v1
metadata:
  name: aws-boto3-get-secret-v1
  skipDeleteAll: false  # FIXME
  executeOnlyOnceOnApply: true
  executeOnlyOnceOnDelete: true
spec:
  description: |
    Retrieves a secret and stores the value in a variable for use by other manifests

    The spec will allow custom Python code to be added for post-secret retrieval processing as may be required for dependent manifests that uses the secret value, for example when only a single value in a complex JSON object is required.

    The following variable will be set once the secret is retrieved:

    * `VALUE` - contains the secret value
    * `TYPE` - Either "string" or "binary"
  kind: AwsBoto3GetSecret
  version: v1
  versionChangelog: |
    This is the initial version
  supportedVersions:
  - 'v1'
  baseClass: ManifestBase
  # outputPaths:              # If any of these are null/NoneType, the global defaults will be used (which is this repo)
  #   doc: /tmp/aws-boto3-get-secret-v1/doc
  #   examples: /tmp/aws-boto3-get-secret-v1/examples
  #   implementations: /tmp/aws-boto3-get-secret-v1/impl
  pipRequirements:
  - 'py-animus'
  importStatements:
  - 'from py_animus.manifest_management import *'
  - 'from py_animus import get_logger'
  - 'import traceback'
  - 'import boto3'
  specFields:
  - fieldName: secretName
    fieldDescription: |
      The name of the AWS Secret
    fieldType: str
    fieldRequired: true
    fieldDefaultValue: None
    fieldSetDefaultValueConditions:
    - fieldDefinitionNotPresentInManifest: false
    - fieldValueTypeMismatch: false
    - fieldValueIsNull: false
    customValidation: |
      self.log(message='No custom validation for promptText', level='debug')
  - fieldName: awsBoto3SessionReference
    fieldDescription: |
      The AWS credentials to use for this secret. The value is the "name" of the relevant "AwsBoto3Session" manifest to use
    fieldType: str
    fieldRequired: true
    fieldDefaultValue: None
    fieldSetDefaultValueConditions:
    - fieldDefinitionNotPresentInManifest: false
    - fieldValueTypeMismatch: false
    - fieldValueIsNull: false
    customValidation: |
      self.log(message='No custom validation for promptText', level='debug')
  - fieldName: conversionTarget
    fieldDescription: |
      Optional, default=None. Other options: "dict" (assumes the original value is a JSON string) which will convert the secret value to a dict. 
    fieldType: str
    fieldRequired: false
    fieldDefaultValue: None
    fieldSetDefaultValueConditions:
    - fieldDefinitionNotPresentInManifest: true
    - fieldValueTypeMismatch: true
    - fieldValueIsNull: true
    customValidation: |
      self.log(message='No custom validation for promptText', level='debug')
  additionalExamples:
  - exampleName: json
    manifest:
      generated: false  # The kind, version and metadata (name only) will be autogenerated. Spec data needs to be supplied and additional metadata can be added
      specData: |
        secretName: my-data
        awsBoto3SessionReference: some-session
        conversionTarget: dict
      additionalMetadata: |
        skipDeleteAll: true
        executeOnlyOnceOnApply: true
    explanatoryText: |
      This example will retrieve the value from the secret and assume it is JSON, which will then be converted into a Python dict.
      
